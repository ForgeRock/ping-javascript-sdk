import { defineConfig } from 'vite';
import dts from 'vite-plugin-dts';
import * as path from 'path';
import * as pkg from './package.json';
import { codecovVitePlugin } from '@codecov/vite-plugin';

export default defineConfig({
  root: __dirname,
  cacheDir: '../../node_modules/.vite/packages/<%= name %>',

  plugins: [
    dts({
      rollupTypes: false,
      insertTypesEntry: false,
      entryRoot: 'src',
      tsconfigPath: path.join(__dirname, 'tsconfig.lib.json'),
    }),
    /**
     * This is specifically for tracking bundle sizes
     * and will only run in CI when the CODECOV_TOKEN
     * is available
     **/
    codecovVitePlugin({
      enableBundleAnalysis: process.env['CODECOV_TOKEN'] !== undefined,
      bundleName: '<%= name %>',
      uploadToken: process.env['CODECOV_TOKEN'],
    }),
  ],
  build: {
    outDir: './dist',
    target: ['esnext', 'es2020'],
    rollupOptions: {
      output: {
        // This is the directory your library will be compiled to.
        dir: '<%= outputDir %>',
        preserveModules: true,
        preserveModulesRoot: 'src',
      },
      external: Array.from(Object.keys(pkg.dependencies) || []).concat([
        './src/lib/mock-data',
        '@reduxjs/toolkit/query',
      ]),
    },
    lib: {
      entry: 'src/index.ts',
      name: '<%= name %>',
      formats: ['es'],
    },
    reportCompressedSize: true,
    commonjsOptions: { transformMixedEsModules: true },
  },
  test: {
    cache: {
      dir: '../../node_modules/.vitest',
    },
    globals: true,
    environment: 'jsdom',
    include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],
    reporters: ['default'],
    coverage: {
      enabled: Boolean(process.env['CI']),
      reporter: [
        ['text', { skipEmpty: true }],
        ['html', { skipEmpty: true }],
        ['json', { skipEmpty: true }],
      ],
      reportsDirectory: './coverage',
      provider: 'v8',
    },
    deps: {
      optimizer: {
        web: {
          include: ['vitest-canvas-mock'],
        },
      },
    },
    environment: 'jsdom',
    include: [
    'src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'
    'src/**/*.test-d.{js,mjs,cjs,ts,mts,cts,jsx,tsx}',
    ],
  },
});
